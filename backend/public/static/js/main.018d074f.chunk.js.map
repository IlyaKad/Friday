{"version":3,"sources":["services/httpService.js","services/userService.js","store/actions/userActions.js","services/utilService.js","services/boardService.js","store/actions/boardActions.js","assets/img/logo.png","cmps/MainHeader.jsx","assets/img/office.png","main-pages/Home.jsx","main-pages/Login.jsx","main-pages/Signup.jsx","Board/cmps/SideHeader.jsx","Board/cmps/TaskFilter.jsx","Board/cmps/UserPreview.jsx","Board/cmps/UsersMenu.jsx","Board/cmps/MemberAvatars.jsx","Board/cmps/EditableElement.jsx","services/socketService.js","Board/cmps/TextEditor.jsx","Board/cmps/Chat.jsx","Board/cmps/Activities.jsx","Board/cmps/BoardHeader.jsx","Board/cmps/FilterModal.jsx","Board/cmps/DateProgressBar.jsx","Board/cmps/LabelMenu.jsx","Board/cmps/DueDate.jsx","Board/cmps/ConfirmModal.jsx","Board/cmps/AlertModal.jsx","Board/cmps/TaskPreview.jsx","Board/cmps/ColorPalette.jsx","Board/cmps/GroupDropDownActions.jsx","Board/cmps/ProgressBar.jsx","Board/cmps/GroupPreview.jsx","Board/cmps/BoardPreview.jsx","Board/cmps/BoardFilter.jsx","Board/cmps/SideNav.jsx","Board/pages/BoardApp.jsx","routes.js","main-pages/MemberProfile.jsx","App.jsx","serviceWorkerRegistration.js","store/reducers/systemReducer.js","store/reducers/boardReducer.js","store/reducers/userReducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","window","location","assign","userService","login","logout","signup","getUsers","getById","userId","remove","update","getLoggedinUser","setLoggedinUser","JSON","parse","sessionStorage","setItem","user","_id","_saveLocalUser","userCred","clear","stringify","getItem","loadUsers","dispatch","type","users","removeUser","userCreds","utilService","getNameOfMonth","month","makeId","length","text","possible","i","charAt","Math","floor","random","formatDate","time","Intl","DateTimeFormat","day","hour","minute","hour12","format","boardService","query","removeBoard","boardId","addBoard","addGroupToBoard","removeGroupFromBoard","removeTaskFromGroup","updateTask","updateGroup","updateBoard","updateBoardAfterDrag","filterBy","board","boardToUpdate","groups","unshift","_addDefaultGroup","activity","_createActivity","title","activities","groupId","idx","findIndex","group","id","splice","taskId","groupIdx","taskIdx","tasks","task","taskName","newValue","map","_createActivityByType","push","_addDefaultTask","activityTxt","_makeId","txt","createdAt","Date","now","byMember","dateStr","startDate","endDate","chatStr","toString","style","Array","isArray","boardTxt","_addDefaultBoard","createdBy","members","color","statuses","priorities","updates","priority","loadBoards","boards","loadBoard","detailsForUpdateTask","updatedBoard","savedBoard","MainHeader","switchLink","pathname","props","className","to","src","logo","alt","Button","variant","size","this","Component","_Home","setGuestUser","username","password","path","history","onClick","office","React","mapDispatchToProps","loadUser","Home","connect","state","_Login","msg","loginCred","loaduserBoards","ev","loggedInUser","loginHandleChange","target","name","value","setState","prevState","doLogin","preventDefault","onSubmit","TextField","margin","required","fullWidth","label","autoComplete","onChange","autoFocus","backgroundColor","Login","userModule","isLoading","systemModule","boardModule","_Signup","signupCred","fullname","signupHandleChange","err","doSignup","signupCreds","Signup","SideHeader","split","Avatar","width","height","border","fontWeight","TaskFilter","groupTitle","inputRef","createRef","handleChange","field","current","focus","InputBase","placeholder","ref","UserPreview","person","icon","onUpdateMembers","action","fontSize","cursor","imgUrl","UsersMenu","membersIds","isShown","usersToShow","filter","indexOf","member","MemberAvatars","toggleUsersMenu","membersInfoArr","memberId","find","ClickAwayListener","onClickAway","AvatarGroup","max","EditableElement","isEdit","titleToEdit","onChangeTitle","onBlur","socketService","socket","setup","io","reconnection","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","TextEditor","editorState","undefined","onEditorStateChange","mentions","onUpdate","sendMsg","msgHandleChange","wrapperClassName","editorClassName","toolbarClassName","mention","separator","trigger","suggestions","_Chat","onUpdateTask","byUser","from","blocks","entityMap","Object","values","block","closeChat","Chat","Activities","isChatShown","getUser","showActivityTime","closeChatShow","closeActivity","BoardHeader","isActivity","createdByTxt","onTaskFilter","onAddGroup","onChangeBoardTitle","onUpdateBoardMembers","marginLeft","DateProgressBar","groupColor","onOpenDate","startMonth","getMonth","startDay","getDate","startDateForDisplay","endMonth","endDay","endDateForDisplay","dateRange","start","getTime","today","end","timePassed","round","abs","range","checkDueDate","LabelMenu","isOpen","setCurrLabel","currLabel","onChangeLabel","toggleMenu","labels","DueDate","focusedInput","_d","changeDates","prevProps","closeDatePicker","isOutsideRange","onDatesChange","hideKeyboardShortcutsPanel","onFocusChange","ConfirmModal","onActionToConfirm","itemId","AlertModal","closeAlert","Alert","severity","marginRight","padding","borderRadius","_TaskPreview","isOpenDate","userPrefColor","isModalOpen","alertIsShown","onRemoveTask","modalAns","onUpdateTaskMembers","draggableId","index","provided","draggableProps","innerRef","dragHandleProps","dueDate","TaskPreview","ColorPalette","onChangeColor","GroupDropDownActions","isActionsModal","isMouseOver","isPalette","toggleGroupActions","closeGroupActions","openPalette","onRemoveGroup","onMouseEnter","onMouseLeave","ProgressBar","getWidth","bgColor","_GroupPreview","taskTitle","onAddTask","addTaskToGroup","onUpdateGroup","loggedInUserId","sortedTasksColors","colorType","sort","statusColors","priorityColors","isCombineEnabled","droppableId","detailsForUpdateGroup","GroupPreview","_BoardPreview","onDragEnd","result","destination","source","draggbleGroup","droppableGroupIdx","droppableGroup","draggbleTask","sourceGroupIdx","destinationGroupIdx","sourceGroup","destinationGroup","onUpdateBoardAfterDrag","droppableProps","detailsForUpdateBoard","BoardPreview","BoardFilter","onBoardFilter","SideNav","isAddTxt","boardTitle","isNavShown","onToggleAddInput","onAddBoard","onToggleBar","onRemoveBoard","paddingLeft","Input","_BoardApp","match","BoardId","updateBoardAfterSocket","BoardApp","routes","component","App","route","exact","Boolean","hostname","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","score","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.018d074f.chunk.js","sourcesContent":["import Axios from 'axios'\r\n// Make sure this is ok:\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n  ? '/api/'\r\n  : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n  withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n  get(endpoint, data) {\r\n    return ajax(endpoint, 'GET', data)\r\n  },\r\n  post(endpoint, data) {\r\n    return ajax(endpoint, 'POST', data)\r\n  },\r\n  put(endpoint, data) {\r\n    return ajax(endpoint, 'PUT', data)\r\n  },\r\n  delete(endpoint, data) {\r\n    return ajax(endpoint, 'DELETE', data)\r\n  }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n  try {\r\n    const res = await axios({\r\n      url: `${BASE_URL}${endpoint}`,\r\n      method,\r\n      data,\r\n      params: (method === 'GET') ? data : null\r\n    })\r\n    return res.data\r\n  } catch (err) {\r\n    console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n    console.dir(err)\r\n    if (err.response && err.response.status === 401) {\r\n      window.location.assign('/#/login')\r\n    }\r\n    throw err\r\n  }\r\n}","import { storageService } from './asyncStorageService'\r\nimport { httpService } from './httpService'\r\nconst SCORE_FOR_REVIEW = 10\r\n\r\nexport const userService = {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update,\r\n    getLoggedinUser,\r\n    setLoggedinUser\r\n}\r\n\r\nfunction getUsers() {\r\n    // return storageService.query('user')\r\n    return httpService.get(`user`)\r\n}\r\n\r\nfunction getById(userId) {\r\n    // return storageService.get('user', userId)\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    // return storageService.remove('user', userId)\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nasync function update(user) {\r\n    // return httpService.put('user', user)\r\n    // return storageService.put('user', user)\r\n    user = await httpService.put(`user/${user._id}`, user)\r\n    // Handle case in which admin updates other user's details\r\n    if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\r\n}\r\n\r\n\r\nasync function login(userCred) {\r\n    // const users = await storageService.query('user')\r\n    // const user = users.find(user => user.username === userCred.username)\r\n    // return _saveLocalUser(user)\r\n\r\n    const user = await httpService.post('auth/login', userCred)\r\n    // GET or POST ??----------------------\r\n    // const user = await httpService.get('/login', userCred)\r\n    if (user) return _saveLocalUser(user)\r\n}\r\nasync function signup(userCred) {\r\n    // const user = await storageService.post('user', userCred)\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _saveLocalUser(user)\r\n}\r\nasync function logout() {\r\n    sessionStorage.clear()\r\n    return await httpService.post('auth/logout')\r\n}\r\nfunction _saveLocalUser(user) {\r\n    sessionStorage.setItem('loggedinUser', JSON.stringify(user))\r\n    return user\r\n}\r\n\r\nfunction getLoggedinUser() {\r\n    return JSON.parse(sessionStorage.getItem('loggedinUser') || null)\r\n}\r\n\r\nfunction setLoggedinUser() {\r\n    return JSON.parse(sessionStorage.setItem('loggedinUser'))\r\n}\r\n\r\n","import { userService } from '../../services/userService'\r\n\r\n// THUNK action creators\r\n// Work asynchronously with the service and dispatch actions to the reducers \r\n\r\nexport function loadUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'LOADING_START' })\r\n      const users = await userService.getUsers()\r\n      dispatch({ type: 'SET_USERS', users })\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    } finally {\r\n      dispatch({ type: 'LOADING_DONE' })\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.getById(userId)\r\n      dispatch({ type: 'SET_USER', user })\r\n      return user\r\n    } catch (err) {\r\n      console.log('UserActions: err in loadUsers', err)\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeUser(userId) {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.remove(userId)\r\n      dispatch({ type: 'REMOVE_USER', userId })\r\n    } catch (err) {\r\n      console.log('UserActions: err in removeUser', err)\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.login(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n      return user\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err)\r\n    }\r\n  }\r\n}\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await userService.signup(userCreds)\r\n      dispatch({ type: 'SET_USER', user })\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err)\r\n    }\r\n  }\r\n}\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await userService.logout()\r\n      dispatch({ type: 'SET_USER', user: null })\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err)\r\n    }\r\n  }\r\n}\r\n","export const utilService = {\r\n    getNameOfMonth,\r\n    makeId,\r\n    formatDate\r\n}\r\n\r\nfunction getNameOfMonth(month) {\r\n    switch (month) {\r\n        case 0:\r\n            return 'Jan'\r\n        case 1:\r\n            return 'Feb'\r\n        case 2:\r\n            return 'Mar'\r\n        case 3:\r\n            return 'Apr'\r\n        case 4:\r\n            return 'May'\r\n        case 5:\r\n            return 'Jun'\r\n        case 6:\r\n            return 'Jul'\r\n        case 7:\r\n            return 'Aug'\r\n        case 8:\r\n            return 'Sep'\r\n        case 9:\r\n            return 'Oct'\r\n        case 10:\r\n            return 'Nov'\r\n        case 11:\r\n            return 'Dec'\r\n        default:\r\n            return ''\r\n    }\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var text = ''\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n    for (var i = 0; i < length; i++) {\r\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n    }\r\n    return text\r\n}\r\n\r\nfunction formatDate(time) {\r\n\r\n    var options = {\r\n        // year: 'numeric', \r\n        month: 'short', day: 'numeric',\r\n        hour: 'numeric', minute: 'numeric',\r\n        hour12: true,\r\n    };\r\n\r\n    return new Intl.DateTimeFormat('en', options).format(time);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { httpService } from './httpService'\r\n// import { storageService } from './asyncStorageService'\r\nimport { userService } from './userService';\r\nimport { utilService } from './utilService';\r\n\r\nexport const boardService = {\r\n  query,\r\n  removeBoard,\r\n  getById,\r\n  addBoard,\r\n  addGroupToBoard,\r\n  // addTaskToGroup,\r\n  removeGroupFromBoard,\r\n  removeTaskFromGroup,\r\n  // changeBoardTitle,\r\n  updateTask,\r\n  updateGroup,\r\n  updateBoard,\r\n  updateBoardAfterDrag\r\n}\r\n\r\nasync function query(filterBy) {\r\n  return httpService.get('board', filterBy)\r\n  // const boards = await storageService.query('board')\r\n  // return boards.filter(board => {\r\n  //   return board.members.includes(userId)\r\n  // })\r\n}\r\n\r\nfunction removeBoard(boardId) {\r\n  return httpService.delete(`board/${boardId}`)\r\n  // return storageService.remove('board', boardId)\r\n}\r\n\r\nfunction getById(boardId) {\r\n  return httpService.get(`board/${boardId}`)\r\n  // return storageService.get('board', boardId)\r\n}\r\n\r\nasync function addGroupToBoard(board, userId) {\r\n  try {\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    boardToUpdate.groups.unshift(_addDefaultGroup(userId))\r\n    const activity = _createActivity(userId, `Added a new group to board: ${board.title}. `)\r\n    boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n  // return storageService.put('board', boardToUpdate)\r\n}\r\n\r\nasync function removeGroupFromBoard(board, userId, groupId) {\r\n  try {\r\n\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    const idx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n    const activity = _createActivity(userId, `Removed the following group: ${boardToUpdate.groups[idx].title}.`)\r\n    boardToUpdate.groups.splice(idx, 1)\r\n    boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n  // return storageService.put('board', boardToUpdate)\r\n}\r\n\r\nasync function removeTaskFromGroup(board, userId, groupId, taskId) {\r\n  try {\r\n\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    const groupIdx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n    const taskIdx = boardToUpdate.groups[groupIdx].tasks.findIndex(task => task.id === taskId)\r\n    const taskName = boardToUpdate.groups[groupIdx].tasks[taskIdx].title\r\n    const activity = _createActivity(userId, ` removed the Task: ${taskName} \r\n  from following Group: ${boardToUpdate.groups[groupIdx].title}`)\r\n    boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n    boardToUpdate.groups[groupIdx].tasks.splice(taskIdx, 1)\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n    // return storageService.put('board', boardToUpdate)\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nasync function updateTask({ board, groupId, userId, taskId, newValue, type }) {\r\n  try {\r\n\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    if (!taskId) { // add new task\r\n      const idx = boardToUpdate.groups.findIndex(group => group.id === groupId)\r\n      boardToUpdate.groups[idx].tasks.push(_addDefaultTask(userId, newValue))\r\n      const activity = _createActivity(userId, `Added a new task: ${newValue}\r\n    to the following Group: ${board.groups[idx].title}`)\r\n      boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n    } else { //update task\r\n      const groups = boardToUpdate.groups.map(group => {\r\n        if (group.id === groupId) {\r\n          const tasks = group.tasks.map(task => {\r\n            if (task.id === taskId) {\r\n              let activity = _createActivityByType(newValue, userId, task, type)\r\n              boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n              task[type] = newValue\r\n            }\r\n            return task\r\n          })\r\n          group.tasks = tasks\r\n          return group\r\n        } else return group\r\n      })\r\n      boardToUpdate.groups = groups\r\n    }\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nfunction _createActivity(userId, activityTxt) {\r\n  return {\r\n    id: _makeId(),\r\n    txt: activityTxt,\r\n    createdAt: Date.now(),\r\n    byMember: userId\r\n  }\r\n}\r\n\r\nfunction _createActivityByType(newValue, userId, task, type) {\r\n  switch (type) {\r\n    case \"dueDate\":\r\n      const dateStr = [utilService.formatDate(newValue.startDate), utilService.formatDate(newValue.endDate)]\r\n      return _createActivity(userId, `Updated the ${type} for task: \"${task.title}\" from ${dateStr[0]} until ${dateStr[1]}.`)\r\n    case \"title\":\r\n      return _createActivity(userId, `Changed ${task.title}'s ${type} to : ${newValue}.`)\r\n    case \"members\":\r\n      return _createActivity(userId, `Amended the task members for: \"${task.title}\" task.`)\r\n    case \"updates\":\r\n      const chatStr = newValue[0].txt.toString()\r\n      return _createActivity(userId, `Sent a message: \"${chatStr}\" in ${task.title}'s chat.`)\r\n    default:\r\n      return _createActivity(userId, `Changed ${task.title}'s task ${type} to : ${newValue.txt}.`)\r\n  }\r\n}\r\n\r\nasync function updateBoardAfterDrag(board) {\r\n  try {\r\n    await httpService.put('board', board)\r\n    return board\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n  // return storageService.put('board', board)\r\n}\r\n\r\nasync function updateGroup({ board, groupId, userId, newValue, type }) {\r\n  try {\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    const groups = board.groups.map(group => {\r\n      if (group.id === groupId) {\r\n        if (type === 'color') {\r\n          group.style[type] = newValue\r\n          const activity = _createActivity(userId, `Changed the color theme for Group:\"${group.title}\".`)\r\n          boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n        }\r\n        else {\r\n          group[type] = newValue\r\n          const activity = _createActivity(userId, `Updated the ${type} of Group :\"${group.title}\".`)\r\n          boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n        }\r\n        return group\r\n      } else return group\r\n    })\r\n    boardToUpdate.groups = groups\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nasync function updateBoard({ board, groupId, userId, newValue, type }) {\r\n  try {\r\n\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    boardToUpdate[type] = newValue\r\n    let activity = ''\r\n    if (Array.isArray(newValue)) activity = _createActivity(userId, ` amended the board members.`)\r\n    else activity = _createActivity(userId, `Updated the ${type} of ${board.title} to ${newValue}.`)\r\n    boardToUpdate.activities = [activity, ...boardToUpdate.activities]\r\n    httpService.put('board', boardToUpdate)\r\n    return boardToUpdate\r\n    // return storageService.put('board', boardToUpdate)\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n}\r\n\r\nasync function addBoard(boardTxt, userId) {\r\n  try {\r\n    const board = _addDefaultBoard(boardTxt, userId)\r\n    const activity = _createActivity(userId, `Created a new board named: ${board.title}.`)\r\n    board.activities = [activity, ...board.activities]\r\n    return httpService.post('board', board)\r\n\r\n  } catch (err) {\r\n    throw err\r\n  }\r\n  // return storageService.post('board', board)\r\n}\r\n\r\nfunction _addDefaultBoard(boardTxt, userId) {\r\n  return {\r\n    title: boardTxt,\r\n    createdAt: Date.now(),\r\n    createdBy: userId,\r\n    members: [userId],\r\n    \"groups\": [_addDefaultGroup(userId)],\r\n    activities: []\r\n  }\r\n}\r\n\r\nfunction _addDefaultGroup(userId) {\r\n  return {\r\n    id: _makeId(),\r\n    title: \"New Group\",\r\n    createdAt: Date.now(),\r\n    createdBy: userId,\r\n    style: {\r\n      color: \"#00ca72\"\r\n    },\r\n    statuses: [\r\n      {\r\n        id: _makeId(),\r\n        color: \"#00c875\",\r\n        txt: \"Done\"\r\n      },\r\n      {\r\n        id: _makeId(),\r\n        color: \"#fec06e\",\r\n        txt: \"Working on it\"\r\n      },\r\n      {\r\n        id: _makeId(),\r\n        color: \"#e2445c\",\r\n        txt: \"Stuck\"\r\n      }\r\n    ],\r\n    priorities: [\r\n      {\r\n        txt: \"Low\",\r\n        color: \"#00c875\",\r\n        id: _makeId()\r\n      },\r\n      {\r\n        txt: \"Medium\",\r\n        color: \"#6b97f1\",\r\n        id: _makeId()\r\n      },\r\n      {\r\n        txt: \"High\",\r\n        color: \"#ff7b4e\",\r\n        id: _makeId()\r\n      },\r\n      {\r\n        txt: \"Urgent\",\r\n        color: \"#ff265d\",\r\n        id: _makeId()\r\n      }\r\n    ],\r\n    tasks: [_addDefaultTask(userId, 'New item')],\r\n  }\r\n\r\n}\r\n\r\nfunction _addDefaultTask(userId, newValue) {\r\n  return {\r\n    id: _makeId(),\r\n    title: newValue,\r\n    updates: [],\r\n    members: [],\r\n    status: {\r\n      id: _makeId(),\r\n      color: \"#dbdbdbf5\",\r\n      txt: \"No status yet\"\r\n    },\r\n    priority: {\r\n      id: _makeId(),\r\n      color: \"#dbdbdbf5\",\r\n      txt: \"Set Priority\"\r\n    },\r\n    updates: [],\r\n    createdAt: Date.now(),\r\n    createdBy: userId,\r\n    dueDate: {\r\n      startDate: \"\",\r\n      endDate: \"\"\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction _makeId(length = 5) {\r\n  var text = ''\r\n  var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\r\n  for (var i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length))\r\n  }\r\n  return text\r\n}","import { boardService } from '../../services/boardService.js'\r\n\r\n\r\nexport function loadBoards(userId, filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await boardService.query(filterBy)\r\n      dispatch({ type: 'SET_BOARDS', boards })\r\n      return boards\r\n    } catch (err) {\r\n      console.log('board.action: err in loadboards():', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function loadBoard(boardId) {\r\n  // if(filterBy){\r\n\r\n  //   dispatch({ type: 'SET_CURR_BOARD', board })\r\n  // } \r\n  return async dispatch => {\r\n    try {\r\n      const board = await boardService.getById(boardId)\r\n      dispatch({ type: 'SET_CURR_BOARD', board })\r\n    } catch (err) {\r\n      console.log('board.action: err in loadBoard():', err);\r\n    }\r\n\r\n  }\r\n}\r\n\r\n// export function onUpdateBoardAfterDrag(board) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n//       const updatedBoard = await boardService.updateBoardAfterDrag(board)\r\n//     } catch (err) {\r\n//       console.log(err);\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function onUpdateBoardAfterDrag(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'UPDATE_BOARD', board })\r\n      const updatedBoard = await boardService.updateBoardAfterDrag(board)\r\n    } catch (err) {\r\n      console.log('board.action: err in onUpdateBoardAfterDrag():', err);\r\n      dispatch({ type: 'UPDATE_BOARD', board })\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoardAfterSocket(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch({ type: 'UPDATE_BOARD', board })\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveBoard(board, userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const savedBoard = await boardService.save(board, userId)\r\n      dispatch({ type: 'ADD_BOARD', savedBoard })\r\n    } catch (err) {\r\n      console.log('board.action: err in saveBoard():', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function addGroupToBoard(board, userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.addGroupToBoard(board, userId)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      console.log('board.action: err in addGroupToBoard():', err);\r\n      dispatch({ type: 'UPDATE_BOARD', board })\r\n    }\r\n  }\r\n}\r\n\r\n// export function addTaskToGroup(board, userId, groupId) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       const updatedBoard = await boardService.addTaskToGroup(board, userId, groupId)\r\n//       dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n//     } catch (err) {\r\n//       console.log('board.action: err in saveBoard():', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function removeGroupFromBoard(board, userId, groupId) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.removeGroupFromBoard(board, userId, groupId)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      console.log('board.action: err in saveBoard():', err);\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateTask(detailsForUpdateTask) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateTask(detailsForUpdateTask)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      dispatch({ type: 'UPDATE_BOARD', board: detailsForUpdateTask.board })\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateGroup(detailsForUpdateGroup) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateGroup(detailsForUpdateGroup)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      dispatch({ type: 'UPDATE_BOARD', board: detailsForUpdateGroup.board })\r\n    }\r\n  }\r\n}\r\n\r\n\r\nexport function updateBoard(detailsForUpdateBoard) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.updateBoard(detailsForUpdateBoard)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch({ type: 'UPDATE_BOARD', board: detailsForUpdateBoard.board })\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeTaskFromGroup(board, userId, groupId, taskId) {\r\n  return async dispatch => {\r\n    try {\r\n      const updatedBoard = await boardService.removeTaskFromGroup(board, userId, groupId, taskId)\r\n      dispatch({ type: 'UPDATE_BOARD', board: updatedBoard })\r\n    } catch (err) {\r\n      console.log('board.action: err in saveBoard():', err);\r\n      dispatch({ type: 'UPDATE_BOARD', board })\r\n    }\r\n  }\r\n}\r\n\r\nexport function addBoard(boardTxt, userId) {\r\n  return async dispatch => {\r\n    try {\r\n      const savedBoard = await boardService.addBoard(boardTxt, userId)\r\n      dispatch({ type: 'ADD_BOARD', savedBoard })\r\n    } catch (err) {\r\n      console.log('board.action: err in addBoard():', err);\r\n    }\r\n  }\r\n}\r\n// export function addBoard(boardTxt, userId) {\r\n//   return async dispatch => {\r\n//     try {\r\n//       const savedBoard = await boardService.addBoard(boardTxt, userId)\r\n//       dispatch({ type: 'ADD_BOARD', savedBoard })\r\n//     } catch (err) {\r\n//       console.log('board.action: err in addBoard():', err);\r\n//     }\r\n//   }\r\n// }\r\n\r\nexport function removeBoard(boardId) {\r\n  return async dispatch => {\r\n    try {\r\n      await boardService.removeBoard(boardId)\r\n      dispatch({ type: 'REMOVE_BOARD', boardId })\r\n    } catch (err) {\r\n      console.log('board.action: err in removeBoard():', err);\r\n    }\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.2a97494b.png\";","import { Component } from 'react'\r\nimport logo from '../assets/img/logo.png'\r\nimport { NavLink } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport class MainHeader extends Component {\r\n\r\n    switchLink = () => {\r\n        const { pathname } = this.props\r\n        if (pathname === '/login/') return <NavLink className=\"link-btn\" to=\"/\">Home</NavLink>\r\n        if (pathname === '/') return <NavLink className=\"link-btn\" to=\"/login/\">Login</NavLink>\r\n        if (pathname === '/signup/') return <NavLink className=\"link-btn\" to=\"/\">Home</NavLink>\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-header-container flex space-between align-center\">\r\n                <div className=\"logo-container flex align-center\">\r\n                    <NavLink to=\"/\">\r\n                        <img src={logo} alt=\"logo\" />\r\n                    </NavLink><span>Friday</span>\r\n                </div>\r\n                <ul className=\"clean-list\">\r\n                    <Button variant=\"contained\" size=\"small\" >\r\n                        {this.switchLink()}\r\n                    </Button>\r\n                    <Button variant=\"contained\" size=\"small\" >\r\n                        <NavLink className=\"link-btn\" to=\"/signup/\">SignUp</NavLink>\r\n                    </Button>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/office.37b08be2.png\";","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { login, loadUser } from '../store/actions/userActions'\r\nimport { loadBoards, loadBoard, addBoard } from '../store/actions/boardActions'\r\nimport { MainHeader } from '../cmps/MainHeader'\r\nimport office from '../assets/img/office.png'\r\n\r\n\r\nclass _Home extends React.Component {\r\n\r\n    // TODO Refactor\r\n    setGuestUser = async () => {\r\n        const user = await this.props.login({\r\n            username: 'guest@welcome.com',\r\n            password: 'guest1'\r\n        })\r\n        if (user) {\r\n            const boards = await this.props.loadBoards(user._id)\r\n            if (!boards.length) {\r\n                this.props.addBoard('Start here', user._id)\r\n            }\r\n            const path = boards?.length ? `/board/${boards[0]._id}` : `/board`\r\n            this.props.history.push(path)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { location } = this.props\r\n        return (\r\n            <section className=\"home-page\">\r\n                <MainHeader pathname={location.pathname} />\r\n                <div className=\"hero\">\r\n                    <div className=\"hero-inner-container flex\">\r\n                        <div className=\"hero-cta\">\r\n                            <h3>Welcome To Friday</h3>\r\n                            <h4>Manage your team with ease and feel your friday getting closer.</h4>\r\n                            <button className=\"guest-user-btn\" onClick={this.setGuestUser}>Try As a Guest</button>\r\n                        </div>\r\n                        <img src={office} alt=\"office\" />\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login,\r\n    loadBoards,\r\n    loadBoard,\r\n    loadUser,\r\n    addBoard\r\n}\r\n\r\n\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MainHeader } from '../cmps/MainHeader'\r\nimport { loadUsers, removeUser, login, logout, signup } from '../store/actions/userActions'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// TODO : clean the code from  non-related pieces\r\n\r\nclass _Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      username: '',\r\n      password: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loggedInUser, loadUsers } = this.props\r\n    loadUsers()\r\n    if (loggedInUser) {\r\n      const boards = this.props.loadBoards(loggedInUser._id)\r\n      const path = boards.length ? `/board/${boards[0]._id}` : `/board`\r\n      this.props.history.push(path)\r\n    }\r\n  }\r\n\r\n  loaduserBoards = async ev => {\r\n    const { loggedInUser } = this.props\r\n    if (loggedInUser) {\r\n      const boards = this.props.loadBoards(loggedInUser._id)\r\n      const path = boards.length ? `/board/${boards[0]._id}` : `/board`\r\n      this.props.history.push(path)\r\n    }\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    try {\r\n      const user = await this.props.login({ username, password })\r\n      if (user) {\r\n        const boards = await this.props.loadBoards(user._id)\r\n        const path = boards.length ? `/board/${boards[0]._id}` : `/board`\r\n        this.props.history.push(path)\r\n      }\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    const { loggedInUser, location } = this.props\r\n    return (\r\n      <section className=\"home-page\">\r\n        <MainHeader pathname={location.pathname} />\r\n        <div className=\"hero\">\r\n          <div className=\"hero-inner-container flex\">\r\n            <form className=\"login-form flex column align-center\" onSubmit={this.doLogin}>\r\n              <span className=\"lock-sign-container\">\r\n                <LockOutlinedIcon />\r\n              </span>\r\n              <h2>Login</h2>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"User Name\"\r\n                autoComplete=\"email\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={this.state.loginCred.username}\r\n                onChange={this.loginHandleChange}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"text\"\r\n                label=\"Password\"\r\n                name=\"username\"\r\n                autoComplete=\"email\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={this.state.loginCred.password}\r\n                onChange={this.loginHandleChange}\r\n                // autoFocus\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#d85597\", color: \"white\" }}>\r\n                Log in\r\n               </Button>\r\n              {/* <button>Login</button> */}\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    isLoading: state.systemModule.isLoading,\r\n    boards: state.boardModule.boards\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n  loadBoards\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { MainHeader } from '../cmps/MainHeader'\r\nimport { loadUsers, removeUser, login, logout, signup } from '../store/actions/userActions'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\n\r\n// TODO : clean the code from  non-related pieces\r\n\r\nclass _Signup extends Component {\r\n  state = {\r\n    msg: '',\r\n    signupCred: {\r\n      username: '',\r\n      password: '',\r\n      fullname: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { loggedInUser, loadUsers, loadBoards } = this.props\r\n    loadUsers()\r\n    if (loggedInUser) {\r\n      const boards = loadBoards(loggedInUser._id)\r\n      const path = boards.length ? `/board/${boards[0]._id}` : `/board`\r\n      this.props.history.push(path)\r\n    }\r\n    else return\r\n  }\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }))\r\n  }\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault()\r\n    const { username, password } = this.state.loginCred\r\n    if (!username) {\r\n      return this.setState({ msg: 'Please enter user/password' })\r\n    }\r\n    const userCreds = { username, password }\r\n    try {\r\n      this.props.login(userCreds)\r\n      this.setState({ loginCred: { username: '', password: '' } })\r\n    } catch (err) {\r\n      this.setState({ msg: 'Login failed, try again.' })\r\n    }\r\n  }\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault()\r\n    const { loggedInUser, loadUsers, loadBoards } = this.props\r\n    const { username, password, fullname } = this.state.signupCred\r\n    if (!username || !password || !fullname) {\r\n      return this.setState({ msg: 'All inputs are required' })\r\n    }\r\n    const signupCreds = { username, password, fullname }\r\n    this.props.signup(signupCreds)\r\n    if (loggedInUser) {\r\n      const boards = this.props.loadBoards(loggedInUser._id)\r\n      const path = boards.length ? `/board/${boards[0]._id}` : `/board`\r\n      this.props.history.push(path)\r\n    }\r\n    this.setState({ signupCred: { username: '', password: '', fullname: '' } })\r\n  }\r\n\r\n  removeUser = userId => {\r\n    this.props.removeUser(userId)\r\n  }\r\n  render() {\r\n    const { loggedInUser, location } = this.props\r\n\r\n    return (\r\n      <section className=\"home-page\">\r\n        <MainHeader pathname={location.pathname} />\r\n        <div className=\"hero\">\r\n          <div className=\"hero-inner-container flex\">\r\n            <form className=\"login-form flex column align-center\" onSubmit={this.doSignup}>\r\n              <span className=\"lock-sign-container\">\r\n                <LockOutlinedIcon />\r\n              </span>\r\n              <h2>SignUp</h2>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"User Name\"\r\n                autoComplete=\"email\"\r\n                type=\"text\"\r\n                name=\"username\"\r\n                // value={this.state.loginCred.username}\r\n                onChange={this.signupHandleChange}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                label=\"Full Name\"\r\n                autoComplete=\"full name\"\r\n                type=\"text\"\r\n                name=\"fullname\"\r\n                // value={this.state.loginCred.username}\r\n                onChange={this.signupHandleChange}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                type=\"text\"\r\n                label=\"Password\"\r\n                name=\"username\"\r\n                autoComplete=\"email\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                // value={this.state.loginCred.password}\r\n                onChange={this.signupHandleChange}\r\n                autoFocus\r\n              />\r\n              <Button\r\n                type=\"submit\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                style={{ backgroundColor: \"#d85597\", color: \"white\" }}>\r\n                Sign Up\r\n             </Button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.userModule.users,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    isLoading: state.systemModule.isLoading\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  removeUser,\r\n  loadUsers,\r\n  loadBoards\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport logo from '../../assets/img/logo.png'\r\n\r\nexport class SideHeader extends React.Component {\r\n \r\n\r\n  render() {\r\n    const { user, logout } = this.props\r\n    return (\r\n      <header className=\"sideheader-container flex column\">\r\n        <Link className=\"logo-link\" to=\"/\"><img src={logo} alt=\"logo\" /></Link>\r\n        <span><NotificationsIcon /></span>\r\n        <div className=\"user-name\"><h1>Hello {(user.fullname).split(' ')[0]}</h1></div>\r\n        <div className=\"side-header-bottom\">\r\n          <Avatar\r\n            style={{\r\n              width: '44px',\r\n              height: '44px',\r\n              backgroundColor: '#292f4c',\r\n              border: 'solid 2px',\r\n              fontWeight: '500'\r\n            }}\r\n            alt='' src=\"/static/images/avatar/1.jpg\" />\r\n          <div className=\"back-link\">\r\n            <Link onClick={logout} to=\"/\"><ExitToAppIcon /></Link>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from '@material-ui/core/InputBase';\r\n\r\n\r\nexport class TaskFilter extends React.Component {\r\n\r\n  state = {\r\n    filterBy: {\r\n      groupTitle: '',\r\n    }\r\n  }\r\n\r\n  inputRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus()\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const field = ev.target.name\r\n    const value = ev.target.type === 'number' ? +ev.target.value : ev.target.value\r\n    this.setState(({ filterBy }) => ({ filterBy: { ...filterBy, [field]: value } }), () => {})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"task-filter-section flex column align-center\" >\r\n        <form className=\"flex align-center\">\r\n          <div className=\"search-btn-container flex align-center\">\r\n            <SearchIcon className=\"search-icon-boardheader\" />\r\n            <InputBase type=\"search\" name=\"name\"\r\n              placeholder=\"Search\" autoComplete=\"off\" ref={this.inputRef}\r\n              onChange={(ev) => { this.handleChange(ev) }} />\r\n          </div>\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\n\r\nexport class UserPreview extends Component {\r\n\r\n\r\n  render() {\r\n    const { person, icon, onUpdateMembers, action } = this.props\r\n    if (!person) return <div className=\"loading\"></div>\r\n    return (\r\n      <div className=\"person-preview flex align-center\">\r\n        <Avatar className=\"avatar-container\"\r\n          style={{\r\n            width: '24px',\r\n            height: '24px',\r\n            backgroundColor: '#636363',\r\n            fontSize: '12px',\r\n            fontWeight: '500',\r\n            cursor: 'pointer'\r\n          }}\r\n          alt={person.fullname} src={person.imgUrl} key={person._id} />\r\n        <span className=\"avatar-user\">\r\n          {person.fullname}\r\n        </span>\r\n        { icon && <span className=\"user-menu-btn\" onClick={() => onUpdateMembers(person._id, action)}>\r\n          {icon}\r\n        </span>}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\nimport { UserPreview } from \"./UserPreview\"\r\nimport RemoveIcon from '@material-ui/icons/Remove'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nexport function UsersMenu({ membersIds, users, members, onUpdateMembers, isShown }) {\r\n\r\n  const usersToShow = users.filter(user => membersIds.indexOf(user._id) === -1)\r\n  return (\r\n    <section  >\r\n      {isShown && <div className=\"users-menu-container\">\r\n        <span>Add</span>\r\n        <div className=\"member-list-box\">\r\n          {members.map((member, idx) =>\r\n            <UserPreview\r\n              key={member._id + idx}\r\n              person={member}\r\n              icon={<RemoveIcon />}\r\n              action={'remove'}\r\n              onUpdateMembers={onUpdateMembers}\r\n            />\r\n          )}\r\n        </div>\r\n        <div className=\"user-list-box\">\r\n          <span>Remove</span>\r\n          {usersToShow && usersToShow.map(user =>\r\n            <UserPreview\r\n              key={user._id}\r\n              person={user}\r\n              icon={<AddIcon />}\r\n              action={'add'}\r\n              onUpdateMembers={onUpdateMembers}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>}\r\n    </section >\r\n  )\r\n\r\n}\r\n","import { Component } from 'react'\r\nimport { Avatar } from '@material-ui/core'\r\nimport { AvatarGroup } from '@material-ui/lab'\r\nimport { UsersMenu } from './UsersMenu'\r\nimport { ClickAwayListener } from '@material-ui/core';\r\n\r\nexport class MemberAvatars extends Component {\r\n\r\n  state = {\r\n    isShown: false,\r\n  }\r\n\r\n  toggleUsersMenu = () => {\r\n    this.setState({ isShown: !this.state.isShown })\r\n  }\r\n\r\n  render() {\r\n    const { isShown } = this.state\r\n    const { users, onUpdateMembers, membersIds } = this.props\r\n    const membersInfoArr = membersIds.map(memberId => users.find(user => user._id === memberId))\r\n    return (\r\n      <ClickAwayListener onClickAway={() => { if (isShown) return this.setState({ isShown: false }) }}>\r\n        <div className=\"member-avatars-main flex justify-center\">\r\n          <UsersMenu\r\n            users={users}\r\n            members={membersInfoArr}\r\n            membersIds={membersIds}\r\n            isShown={isShown}\r\n            onUpdateMembers={onUpdateMembers}\r\n          />\r\n          {(membersInfoArr.length) ?\r\n            <AvatarGroup onClick={this.toggleUsersMenu} max={3}>\r\n              {membersInfoArr.map((member, idx) =>\r\n                <Avatar className=\"avatar-container\"\r\n                  style={{\r\n                    width: '24px',\r\n                    height: '24px',\r\n                    backgroundColor: '#636363',\r\n                    border: 'solid 0.5px',\r\n                    fontSize: '12px',\r\n                    fontWeight: '500',\r\n                    cursor: 'pointer'\r\n                  }} alt={member?.fullname} src={member?.imgUrl} key={member?._id + idx} />\r\n              )}\r\n            </AvatarGroup> :\r\n            <Avatar className=\"avatar-container\" style={{ backgroundColor: '#a3a3a399' }}\r\n              alt='' src='' onClick={this.toggleUsersMenu} />}\r\n        </div>\r\n      </ClickAwayListener>\r\n    )\r\n  }\r\n}","import { Component } from 'react'\r\n\r\nexport class EditableElement extends Component {\r\n  state = {\r\n    isEdit: false,\r\n    titleToEdit: this.props.title\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ titleToEdit: target.value })\r\n  }\r\n\r\n  // componentDidUpdate(prevProps, prevState) {\r\n  //   if (prevProps.title !== this.props.title) this.setState({ titleToEdit: this.props.title })\r\n  // }\r\n\r\n\r\n  onChangeTitle = (ev) => {\r\n    ev.preventDefault()\r\n    const { title, type } = this.props\r\n    const { titleToEdit } = this.state\r\n    if (title === titleToEdit) {\r\n      this.setState({ isEdit: false })\r\n      return\r\n    }\r\n    this.props.onChangeTitle(titleToEdit, type)\r\n    this.setState({ isEdit: false })\r\n  }\r\n\r\n\r\n  render() {\r\n    const { title, color } = this.props\r\n    const { isEdit, titleToEdit } = this.state\r\n    return (\r\n      isEdit ?\r\n        <form className=\"editable-form\" onSubmit={this.onChangeTitle}>\r\n          <input className=\"editable-input\"\r\n            autoFocus={true}\r\n            autoComplete=\"off\"\r\n            style={{ color: `${color}` }}\r\n            onChange={this.handleChange}\r\n            value={titleToEdit} name=\"title\"\r\n            onBlur={this.onChangeTitle} />\r\n        </form> :\r\n        <div className=\"editable-txt-prev\" onClick={() => this.setState({ isEdit: true, titleToEdit: this.props.title })}><span>{title}</span></div>\r\n    )\r\n  }\r\n}\r\n","import io from 'socket.io-client'\r\nimport {httpService} from './httpService'\r\n\r\nexport const SOCKET_EMIT_USER_WATCH = 'user-watch';\r\nexport const SOCKET_EVENT_USER_UPDATED = 'user-updated';\r\nexport const SOCKET_EVENT_REVIEW_ADDED = 'review-added';\r\n\r\n\r\nconst baseUrl = (process.env.NODE_ENV === 'production')? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n\r\n//  CHECK THIS :\r\nvar socketIsReady = false;\r\n// socketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    async setup() {\r\n      if (socket) return\r\n      await httpService.get('setup-session')\r\n      socket = io(baseUrl, { reconnection: false})\r\n      socketIsReady = true;\r\n    },\r\n    async on(eventName, cb) {\r\n      if (!socket) await socketService.setup()\r\n      socket.on(eventName, cb)\r\n    },\r\n    async off(eventName, cb=null) {\r\n      if (!socket) await socketService.setup()\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    async emit(eventName, data) {\r\n      if (!socket) await socketService.setup()\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n      socketIsReady = false\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', {from: 'Someone', txt: 'Aha it worked!'})\r\n    },\r\n  }\r\n  return socketService\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { EditorState, ContentState } from 'draft-js';\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport { convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport Button from '@material-ui/core/Button'\r\n\r\n\r\nexport class TextEditor extends Component {\r\n\r\n  state = {\r\n    editorState: undefined\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({ editorState });\r\n  }\r\n\r\n  mentions = () => {\r\n    const { users } = this.props\r\n    const suggestions = users.map(user => {\r\n      return { text: user.fullname, value: user.fullname, url: 'http://facebook.com' }\r\n    })\r\n    return suggestions\r\n  }\r\n\r\n  onUpdate = (ev) => {\r\n    this.props.sendMsg(ev)\r\n    this.setState({ editorState: undefined });\r\n  }\r\n\r\n  render() {\r\n    const { msgHandleChange, sendMsg, users } = this.props\r\n    const { editorState } = this.state\r\n    return (\r\n      <div>\r\n        <Editor wrapperClassName=\"text-editor-wrapper\"\r\n          editorClassName=\"editor-txt-area\"\r\n          toolbarClassName=\"txt-editor-toolbar\"\r\n          editorState={editorState}\r\n          onChange={msgHandleChange}\r\n          mention={{\r\n            separator: ' ',\r\n            trigger: '@',\r\n            suggestions: this.mentions(),\r\n          }}\r\n          placeholder='Send your update...'\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n        <Button className=\"chat-update-btn\"\r\n          variant=\"contained\"\r\n          color=\"primary\" size=\"small\"\r\n          onClick={this.onUpdate}>Update</Button>\r\n      </div>\r\n    )\r\n  }\r\n}","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { socketService } from '../../services/socketService'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport { UserPreview } from \"./UserPreview\"\r\nimport { utilService } from '../../services/utilService'\r\nimport { TextEditor } from './TextEditor'\r\nimport { ClickAwayListener } from '@material-ui/core'\r\n\r\n\r\n\r\nclass _Chat extends Component {\r\n  state = {\r\n    update: {\r\n      txt: '',\r\n      src: ''\r\n    },\r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    // socketService.on('chat addMsg', this.addMsg)\r\n  }\r\n\r\n  sendMsg = ev => {\r\n    ev.preventDefault()\r\n    const { update } = this.state\r\n    const { task, loggedInUser, onUpdateTask } = this.props\r\n    update.createdAt = Date.now()\r\n    update.byUser = loggedInUser\r\n    update.id = utilService.makeId()\r\n    if (!task.updates) return\r\n    const updates = [update, ...task.updates]\r\n    onUpdateTask(updates, 'updates')\r\n    socketService.emit('chat newMsg', update)\r\n    this.setState({ update: { from: 'Me', txt: '' } })\r\n  }\r\n\r\n  msgHandleChange = ev => {\r\n    const { blocks, entityMap } = ev\r\n    if (Object.values(entityMap).length) {\r\n      const { 0: { data: { src } } } = ev.entityMap\r\n      this.setState(prevState => {\r\n        return { update: { ...prevState.update, src } }\r\n      })\r\n    }\r\n    const txt = blocks.map(block => block.text + '\\n')\r\n    this.setState(prevState => {\r\n      return {\r\n        update: { ...prevState.update, txt }\r\n      }\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { closeChat, task, users, activity, activities } = this.props\r\n    return (\r\n      <ClickAwayListener onClickAway={closeChat}>\r\n        <div className=\"chat-container flex column\">\r\n          <div className=\"chat-header-container\" >\r\n            <button onClick={closeChat}>\r\n              <CloseIcon style={{\r\n                fontSize: '20px',\r\n                fontWeight: '400'\r\n              }} />\r\n            </button>\r\n            {task.title ? <h2> {task.title}</h2> : <h2>{activity.txt}</h2>}\r\n          </div>\r\n          <div className=\"chat-form-container flex column\" >\r\n            <TextEditor\r\n              sendMsg={this.sendMsg}\r\n              msgHandleChange={this.msgHandleChange}\r\n              users={users}\r\n            />\r\n          </div>\r\n          {task.updates && <div className=\"chat-msgs-container\">\r\n            <ul>\r\n              {task.updates.map((update, idx) => (\r\n                <li key={update.id}>\r\n                  <span ><UserPreview person={update.byUser} /></span>\r\n                  <span className=\"msg-txt-container\" ><pre>{update.txt}</pre></span>\r\n                  {update.src && <span className=\"chat-img-container\">\r\n                    <img src={update.src} alt=\"\" /></span>}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>}\r\n          {activities && <div className=\"chat-msgs-container\">\r\n            <ul>\r\n              {activities.map((activity, idx) => (\r\n                <li key={activity.id}>\r\n                  <span ><UserPreview person={activity.byMember} /></span>\r\n                  <span className=\"msg-txt-container\" ><pre>{activity.txt}</pre></span>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>}\r\n        </div>\r\n      </ClickAwayListener>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\nconst mapDispatchToProps = {\r\n}\r\n\r\nexport const Chat = connect(mapStateToProps, mapDispatchToProps)(_Chat)\r\n","import { Component } from 'react'\r\nimport { UserPreview } from './UserPreview'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { Button } from '@material-ui/core';\r\nimport { utilService } from '../../services/utilService'\r\nimport { BiTime } from 'react-icons/bi';\r\nimport { Chat } from './Chat';\r\n\r\n\r\nexport class Activities extends Component {\r\n\r\n  state = {\r\n    isChatShown: false\r\n  }\r\n\r\n  getUser = (activity) => {\r\n    return this.props.users.find(user => user._id === activity.byMember)\r\n  }\r\n\r\n  showActivityTime = (createdAt) => {\r\n    if (createdAt) {\r\n      const timeSinceActivity = utilService.formatDate(createdAt)\r\n      return timeSinceActivity\r\n    }\r\n  }\r\n\r\n  closeChatShow = () => {\r\n    this.setState({ isChatShown: false })\r\n  }\r\n\r\n  render() {\r\n    const { board, closeActivity } = this.props\r\n    return (\r\n      <div className=\"board-log-container\">\r\n        <div className=\"log-header\" >\r\n          <CloseIcon className=\"close-log-btn\" style={{\r\n            fontSize: '20px',\r\n            fontWeight: '400'\r\n          }} onClick={closeActivity} />\r\n          <h2 className=\"activity-title\">{`${board.title}`}'s Activity Log:</h2>\r\n        </div>\r\n        <div className=\"activities-container\">\r\n          <ul >\r\n            {board.activities.map(activity =>\r\n              <li key={activity.id} className=\"flex column\">\r\n                <span className=\"activity-creator\" >\r\n                  <UserPreview person={this.getUser(activity)} />\r\n                </span>\r\n                <div className=\"activity-details flex column\">\r\n                  <span>{`${activity.txt}`} </span>\r\n                  <span className=\"activity-date flex align-center  \">\r\n                    <BiTime className=\"time-icon\" />\r\n                    {this.showActivityTime(activity.createdAt)}\r\n                  </span>\r\n                </div>\r\n                <div className=\"activity-footer\" >\r\n                  <Button\r\n                    className=\"log-btn\"\r\n                    variant=\"contained\" color=\"primary\"\r\n                    onClick={() => this.setState({ isChatShown: true })}\r\n                  >Chat about it\r\n                    </Button>\r\n                  {this.state.isChatShown && <Chat activity={activity} task={activity}\r\n                    activities={board.activities}\r\n                    users={board.members}\r\n                    closeChat={this.closeChatShow}\r\n                  />}\r\n                </div>\r\n              </li>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { userService } from '../../services/userService'\r\nimport { TaskFilter } from './TaskFilter'\r\nimport { MemberAvatars } from './MemberAvatars'\r\nimport Button from '@material-ui/core/Button';\r\nimport { EditableElement } from './EditableElement';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Activities } from './Activities';\r\nimport { ClickAwayListener } from '@material-ui/core'\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport { FilterModal } from './FilterModal';\r\n\r\n\r\nexport class BoardHeader extends React.Component {\r\n\r\n  state = {\r\n    createdBy: '',\r\n    isActivity: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createdByTxt()\r\n  }\r\n\r\n  createdByTxt = async () => {\r\n    const { board } = this.props\r\n    const createdBy = await userService.getById(board.createdBy)\r\n    this.setState({ createdBy })\r\n  }\r\n\r\n  closeActivity = () => {\r\n    this.setState({ isActivity: false })\r\n  }\r\n\r\n  onTaskFilter = ({ groupTitle }) => {\r\n    const filteredGroups = this.props.board.groups.filter(group => group.title === groupTitle)\r\n  }\r\n\r\n  render() {\r\n    const { board, users, onAddGroup, onChangeBoardTitle, onUpdateBoardMembers } = this.props\r\n    const { isActivity } = this.state\r\n    return (\r\n      <section className=\"board-header flex column\">\r\n        <div className=\"board-header-top-section flex\">\r\n          <div className=\"board-details flex column\">\r\n            <EditableElement\r\n              title={board.title}\r\n              onChangeTitle={onChangeBoardTitle}\r\n            />\r\n            <span className=\"created-by\">Created by: {this.state.createdBy.fullname}</span>\r\n          </div>\r\n          <div className=\"right-btns-container flex justify-between\">\r\n            <MemberAvatars\r\n              onUpdateMembers={onUpdateBoardMembers}\r\n              users={users}\r\n              membersIds={board.members}\r\n            />\r\n            <Button variant=\"outlined\" size=\"small\" onClick={() => this.setState({ isActivity: !isActivity })}\r\n              style={{ marginLeft: \"6px\" }}  ><TrendingUpIcon />Activities</Button>\r\n            {isActivity && <ClickAwayListener onClickAway={this.closeActivity}>\r\n              <Activities users={users} board={board} closeActivity={this.closeActivity} /></ClickAwayListener>}\r\n          </div>\r\n        </div>\r\n        <div className=\"board-header-bottom-section flex align-center space-between\" >\r\n          <div className=\"flex align-center\">\r\n            <Button className=\"add-group-btn\"\r\n              onClick={onAddGroup}\r\n              variant=\"contained\"\r\n              color=\"primary\" size=\"small\"\r\n            >add group</Button>\r\n          </div>\r\n          <TaskFilter />\r\n          {/* <FilterModal board={board} /> */}\r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import { Component } from 'react'\r\nimport { UserPreview } from './UserPreview'\r\n\r\nexport class FilterModal extends Component {\r\n  render() {\r\n\r\n    const { board } = this.props\r\n    return (\r\n      <section>\r\n        <div className=\"sort-status-menu\">\r\n\r\n        </div>\r\n\r\n        <div className=\"sort-members-menu\" >\r\n\r\n          {/* <UserPreview /> */}\r\n\r\n        </div>\r\n        <div className=\"sort-priority-menu\" >\r\n\r\n        </div>\r\n\r\n      </section>\r\n    )\r\n  }\r\n}\r\n","import { utilService } from \"../../services/utilService\";\r\n\r\nexport const DateProgressBar = ({ startDate, endDate, groupColor, onOpenDate, createdAt }) => {\r\n\r\n    const checkDueDate = (startDate, endDate) => {\r\n        let progressVal;\r\n        const start = new Date(startDate).getTime()\r\n        const today = new Date().getTime()\r\n        const end = new Date(endDate).getTime()\r\n        if (startDate && endDate && start > today) return 0\r\n        else if (!endDate && startDate && start > today) {\r\n            const timePassed = today - createdAt\r\n            progressVal = Math.round((timePassed / (start - createdAt)) * 100)\r\n            return progressVal\r\n        }\r\n        else if (!endDate && startDate && start < today) return 100\r\n        const timePassed = Math.abs(today - start)\r\n        const range = Math.abs(end - start)\r\n        progressVal = Math.round(timePassed * 100 / range)\r\n        return progressVal\r\n    }\r\n    const startMonth = new Date(startDate).getMonth()\r\n    const startDay = new Date(startDate).getDate()\r\n    const startDateForDisplay = utilService.getNameOfMonth(startMonth) + ' ' + startDay\r\n    const endMonth = new Date(endDate).getMonth()\r\n    const endDay = new Date(endDate).getDate()\r\n    const endDateForDisplay = utilService.getNameOfMonth(endMonth) + ' ' + endDay\r\n    let dateRange = endDate ? startDateForDisplay + ' - ' + endDateForDisplay : startDateForDisplay\r\n    let width;\r\n\r\n    if (!startDate && !endDate) {\r\n        dateRange = 'Choose Date'\r\n        width = 0\r\n    } else width = checkDueDate(startDate, endDate)\r\n\r\n    return (\r\n        <div className=\"progressbar-container\" style={{ backgroundColor: '#898686' }}>\r\n            <div className=\"inner-progressbar\"\r\n                style={{ backgroundColor: groupColor, width: width + '%' }}>\r\n                <span style={{ color: groupColor === '#C7C1C1' ? ' #333333' : '#F9F9F9' }}>{dateRange}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { ClickAwayListener } from '@material-ui/core'\r\nimport { Component } from 'react'\r\n\r\nexport class LabelMenu extends Component {\r\n\r\n    state = {\r\n        isOpen: false\r\n    }\r\n    setCurrLabel = (label) => {\r\n        const { currLabel, onChangeLabel, type } = this.props\r\n        if (label.txt === currLabel.txt) {\r\n            this.toggleMenu()\r\n            return\r\n        }\r\n        onChangeLabel(label, type)\r\n        this.toggleMenu()\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState({ isOpen: !this.state.isOpen })\r\n    }\r\n\r\n\r\n    render() {\r\n        const { labels, currLabel } = this.props\r\n        const { isOpen } = this.state\r\n\r\n        return (\r\n            <div className=\"labels-menu-container\">\r\n            \r\n                <div className=\"selected-label\"\r\n                    onClick={this.toggleMenu}\r\n                    style={{ backgroundColor: currLabel.color }}>\r\n                    {currLabel.txt}\r\n                </div>\r\n                {isOpen &&\r\n                    <ClickAwayListener onClickAway={this.toggleMenu}>\r\n                        <div className=\"labels-menu\">\r\n                            {labels.map(label => {\r\n                                return <div className=\"label-item\"\r\n                                    key={label.id}\r\n                                    style={{ backgroundColor: label.color }}\r\n                                    onClick={() => this.setCurrLabel(label)}\r\n                                >\r\n                                    {label.txt}\r\n                                </div>\r\n                            })}\r\n\r\n                        </div>\r\n                    </ClickAwayListener>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import 'react-dates/initialize';\r\nimport 'react-dates/lib/css/_datepicker.css';\r\nimport { DayPickerRangeController } from 'react-dates';\r\nimport React, { Component } from 'react'\r\n\r\nexport class DueDate extends Component {\r\n    state = {\r\n        isShown: false,\r\n        startDate: null,\r\n        endDate: null,\r\n        focusedInput: 'startDate'\r\n    }\r\n\r\n\r\n    handleChange = () => {\r\n        const { startDate, endDate, focusedInput } = this.state\r\n        if (startDate?._d && endDate?._d) this.props.changeDates({ startDate: startDate?._d, endDate: endDate?._d },this.props.type)\r\n        if (startDate?._d && !endDate?._d && !focusedInput) {\r\n            this.props.changeDates({ startDate: startDate?._d, endDate: null },this.props.type)\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        const { startDate, endDate, focusedInput } = this.state\r\n        if (startDate?._d && !endDate?._d && !focusedInput) {\r\n            this.props.changeDates({ startDate: startDate?._d, endDate: null },this.props.type)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { /* startDate, endDate, cardId, */ closeDatePicker } = this.props\r\n        return (\r\n            <div className=\"datePicker\">\r\n                <DayPickerRangeController\r\n                    startDate={this.state.startDate} // momentPropTypes.momentObj or null,\r\n                    endDate={this.state.endDate} // momentPropTypes.momentObj or null,\r\n                    isOutsideRange={() => false}\r\n                    onDatesChange={({ startDate, endDate }) => this.setState({ startDate, endDate }, this.handleChange)}\r\n                    focusedInput={this.state.focusedInput}\r\n                    hideKeyboardShortcutsPanel={true}\r\n                    onFocusChange={focusedInput => {\r\n                        this.setState({ focusedInput })\r\n                    }}\r\n                />\r\n                <button className=\"date-btn\" onClick={() => this.setState({ focusedInput: null }, closeDatePicker)}>Set</button>\r\n            </div>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import { Component } from 'react'\r\n// import 'react-date-range/dist/styles.css'\r\n// import 'react-date-range/dist/theme/default.css'\r\n// import { DateRange, DateRangePicker } from 'react-date-range';\r\n// import { ClickAwayListener } from '@material-ui/core';\r\n// import moment from 'moment';\r\n\r\n// export class DueDate extends Component {\r\n\r\n//     state = {\r\n//         selectionRange: {\r\n//             startDate: new Date(),\r\n//             endDate: new Date(),\r\n//             key: 'selection',\r\n//         },\r\n//         isShown: null,\r\n//         timeRange: null\r\n\r\n//     }\r\n//     toggleDueDateShow = () => {\r\n//         this.setState({ isShown: !this.state.isShown })\r\n//     }\r\n\r\n//     handleSelect = (date) => {\r\n//         const { selection } = date\r\n//         const timeRange = moment.duration((selection.endDate - selection.startDate)).days() + 1\r\n//         this.setState({ timeRange })\r\n//         // this.setState({ isShown: !this.state.isShown })\r\n//     }\r\n\r\n//     render() {\r\n//         const { selectionRange, isShown, timeRange } = this.state\r\n//         if (timeRange && !isShown) return (\r\n//             <span className=\"date-range-container\" onClick={this.toggleDueDateShow}>\r\n//                 {timeRange} Days left</span>\r\n//         )\r\n//         else return (\r\n//             <section >\r\n//                 {!isShown ? <span className=\"date-range-container\"\r\n//                     onClick={this.toggleDueDateShow}>Choose</span> :\r\n//                     <div className=\"date-range-picker\">\r\n//                         <ClickAwayListener onClickAway={this.toggleDueDateShow}>\r\n//                             <DateRangePicker ranges={[selectionRange]} onChange={this.handleSelect} />\r\n//                         </ClickAwayListener>\r\n//                     </div>}\r\n//             </section >\r\n//         )\r\n//     }\r\n// }\r\n","import { Button } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nexport function ConfirmModal({ onActionToConfirm, itemId }) {\r\n\r\n\r\n\r\n  return (\r\n    <section className=\"modal-container\">\r\n      <div className=\"modal-box\">\r\n        <div className=\"modal-msg-container\" >\r\n          <p className=\"modal-question\" >Delete this item?</p>\r\n          <p className=\"modal-note\">If you confirm, it will be permanently deleted.</p>\r\n        </div>\r\n        <div className=\"modal-btns-container\">\r\n          <Button className=\"modal-decline-btn\"\r\n            onClick={() => onActionToConfirm(itemId, 'decline')} >Cancle</Button>\r\n          <Button className=\"modal-confirm-btn\" variant=\"contained\"\r\n            onClick={() => onActionToConfirm(itemId, 'confirm')}>Delete</Button>\r\n        </div>\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Alert from '@material-ui/lab/Alert'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\n\r\nexport function AlertModal({ closeAlert }) {\r\n  return (\r\n    <div className=\"alert-contaier  flex align-center\">\r\n      <Alert className=\"success-alert flex align-center\" severity=\"success\">\r\n        Item was successfully deleted!\r\n      </Alert>\r\n      {/* <CloseIcon className=\"close-icon\"  */}\r\n      <CloseIcon className=\"close-icon\" onClick={closeAlert}\r\n        style={{\r\n          backgroundColor: \"#0f9147\",\r\n          width: \"40px\",\r\n          height: \"40px\",\r\n          color: \"#fefffe\",\r\n          marginLeft: \"-5px\",\r\n          marginRight: \"5px\",\r\n          padding: \"10px\",\r\n          borderRadius: \"3px\"\r\n\r\n        }} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { DateProgressBar } from \"./DateProgressBar\"\r\nimport { MemberAvatars } from './MemberAvatars'\r\nimport { EditableElement } from './EditableElement'\r\nimport { removeTaskFromGroup, updateTask } from '../../store/actions/boardActions'\r\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator'\r\nimport { ClickAwayListener } from '@material-ui/core'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { Draggable } from 'react-beautiful-dnd'\r\nimport { LabelMenu } from './LabelMenu'\r\nimport { DueDate } from './DueDate'\r\nimport { Chat } from './Chat'\r\nimport { BsChat } from 'react-icons/bs';\r\nimport { ConfirmModal } from './ConfirmModal'\r\nimport { AlertModal } from './AlertModal'\r\n\r\n\r\n\r\nclass _TaskPreview extends React.Component {\r\n  state = {\r\n    isOpenDate: false,\r\n    userPrefColor: this.props.userPrefColor,\r\n    isChatShown: false,\r\n    isModalOpen: false,\r\n    alertIsShown: false\r\n  }\r\n\r\n  onRemoveTask = (taskId, modalAns) => {\r\n    const { board, group, loggedInUser } = this.props\r\n    if (modalAns === 'confirm') {\r\n      this.setState({ isModalOpen: false })\r\n      this.setState({ alertIsShown: true })\r\n      this.props.removeTaskFromGroup(board, loggedInUser._id, group.id, taskId)\r\n    }\r\n    else {\r\n      this.setState({ isModalOpen: false })\r\n    }\r\n  }\r\n\r\n  closeAlert = () => {\r\n    this.setState({ alertIsShown: false })\r\n\r\n  }\r\n\r\n  onUpdateTask = (newValue, type) => {\r\n    if (!newValue) return\r\n    const { updateTask, board, group, loggedInUser, task } = this.props\r\n    updateTask({ board, groupId: group.id, userId: loggedInUser._id, taskId: task.id, newValue, type })\r\n    if (type === 'dueDate') this.closeDatePicker()\r\n  }\r\n\r\n  onUpdateTaskMembers = (memberId, action) => {\r\n    const { updateTask, board, group, loggedInUser, task } = this.props\r\n    const { members } = task\r\n    if (action === 'remove') var newValue = members.filter(id => id !== memberId)\r\n    else {\r\n      newValue = [...members, memberId]\r\n    }\r\n    updateTask({ board, groupId: group.id, userId: loggedInUser._id, taskId: task.id, newValue, type: 'members' })\r\n  }\r\n\r\n  closeChatShow = () => {\r\n    this.setState({ isChatShown: false })\r\n  }\r\n\r\n  closeDatePicker = () => {\r\n    this.setState({ isOpenDate: false })\r\n  }\r\n\r\n  render() {\r\n    const { task, group, userPrefColor, users, idx } = this.props\r\n    const { isOpenDate, isChatShown, isModalOpen, alertIsShown } = this.state\r\n    return (\r\n      <Draggable draggableId={task.id} index={idx}>\r\n        {(provided) => (\r\n          <section className=\"task-box-container flex align-center\"\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            {alertIsShown && <AlertModal closeAlert={this.closeAlert} />}\r\n            {isModalOpen && <ConfirmModal onActionToConfirm={this.onRemoveTask} itemId={task.id} />}\r\n            {isChatShown && <Chat task={task}\r\n              users={users}\r\n              closeChat={this.closeChatShow}\r\n              onUpdateTask={this.onUpdateTask}\r\n            />}\r\n            <span className=\"drag-icon\" {...provided.dragHandleProps} ><DragIndicatorIcon /></span>\r\n            <div className=\"task-box-preview\">\r\n              <div style={{ backgroundColor: `${userPrefColor}` }}></div>\r\n              <div\r\n                className=\"task-title-container\">\r\n                <EditableElement\r\n                  title={task.title}\r\n                  onChangeTitle={this.onUpdateTask}\r\n                  type=\"title\"\r\n                />\r\n                <DeleteIcon className=\"delete-icon\" onClick={() => this.setState({ isModalOpen: true })} />\r\n              </div>\r\n              <div className=\"chat-icon-container flex column align-center\">\r\n                {task.updates.length > 0 && <span className=\"chat-msgs-count\">{task.updates.length}</span>}\r\n                < BsChat className=\"chat-icon\"\r\n                  onClick={() => this.setState({ isChatShown: true })}\r\n                />\r\n              </div>\r\n              <MemberAvatars\r\n                onUpdateMembers={this.onUpdateTaskMembers}\r\n                membersIds={[...task.members]}\r\n                users={users} />\r\n              <LabelMenu\r\n                labels={group.statuses}\r\n                currLabel={task.status}\r\n                type=\"status\"\r\n                onChangeLabel={this.onUpdateTask}\r\n              />\r\n              <ClickAwayListener onClickAway={this.closeDatePicker}>\r\n                <div\r\n                  className=\"date-picker-container flex justify-center\"\r\n                  onClick={() => this.setState({ isOpenDate: true })}>\r\n                  <DateProgressBar\r\n                    startDate={task.dueDate.startDate}\r\n                    endDate={task.dueDate.endDate}\r\n                    createdAt={task.createdAt}\r\n                    groupColor={group.style.color}\r\n                  />\r\n                  {isOpenDate && <DueDate\r\n                    closeDatePicker={this.closeDatePicker}\r\n                    changeDates={this.onUpdateTask}\r\n                    type=\"dueDate\"\r\n                  />}\r\n                </div>\r\n              </ClickAwayListener>\r\n              <LabelMenu\r\n                currLabel={task.priority}\r\n                onChangeLabel={this.onUpdateTask}\r\n                type=\"priority\"\r\n                labels={group.priorities} />\r\n              <div style={{ backgroundColor: `#c4c4c4` }}></div>\r\n            </div>\r\n            {provided.placeholder}\r\n          </section >\r\n        )}\r\n      </Draggable>)\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    users: state.userModule.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  removeTaskFromGroup,\r\n  updateTask,\r\n}\r\n\r\nexport const TaskPreview = connect(mapStateToProps, mapDispatchToProps)(_TaskPreview)","export function ColorPalette({ onChangeColor }) {\r\n  const palette = ['#bc3354', '#e2445c', '#ff158a', '#ff5bc4', '#ff642f', '#cab641', '#fdab3d', '#ffcb00', '#9cd326',\r\n    '#037f4d', '#784ad1', '#a25ddc', '#0386c0', '#579bfc', '#66ccff', '#c4c4c4']\r\n\r\n  return (\r\n    < div className=\"colors-palette\" >\r\n      {palette.map(color =>\r\n        <span style={{ backgroundColor: color }} key={color} onClick={() => onChangeColor(color, 'color')}></span>)}\r\n    </div >\r\n  )\r\n}","import React, { Component } from 'react'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { ColorPalette } from './ColorPalette'\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown'\r\nimport { ClickAwayListener, Divider } from '@material-ui/core'\r\nimport DragIndicatorIcon from '@material-ui/icons/DragIndicator'\r\n\r\n\r\nexport class GroupDropDownActions extends Component {\r\n\r\n  state = {\r\n    isActionsModal: false,\r\n    isMouseOver: false,\r\n    isPalette: false\r\n  }\r\n\r\n  toggleGroupActions = () => {\r\n    this.setState({ isActionsModal: !this.state.isActionsModal })\r\n  }\r\n\r\n  closeGroupActions = () => {\r\n    this.setState({ isActionsModal: false })\r\n    this.setState({ isPalette: false })\r\n  }\r\n\r\n  openPalette = () => {\r\n    this.setState({ isPalette: !this.state.isPalette })\r\n  }\r\n\r\n  render() {\r\n    const { group, onRemoveGroup, onChangeColor, provided } = this.props\r\n    const { isMouseOver, isActionsModal, isPalette } = this.state\r\n    return (\r\n      <ClickAwayListener onClickAway={this.closeGroupActions}>\r\n        <div className=\"group-actions-container flex align-center\">\r\n\r\n          <ArrowDropDownIcon className=\"drop-down-icon\"\r\n            onMouseEnter={() => this.setState({ isMouseOver: true })}\r\n            onMouseLeave={() => this.setState({ isMouseOver: false })}\r\n            style={{\r\n              backgroundColor: isMouseOver ? '#ffffff' : group.style.color,\r\n              border: !isMouseOver ? '#ffffff' : `1px solid ${group.style.color}`,\r\n              color: isMouseOver ? group.style.color : '#ffffff'\r\n            }}\r\n            onClick={this.toggleGroupActions} />\r\n          <span className=\"drag-icon\" {...provided.dragHandleProps} ><DragIndicatorIcon /></span>\r\n          {isActionsModal &&\r\n            <div className=\"group-actions\">\r\n              <div className=\"delete-action\" onClick={() => { onRemoveGroup(group.id) }}>\r\n                <DeleteIcon className=\"delete-icon\" />\r\n                <span>Delete group</span>\r\n              </div>\r\n              <div className=\"color-action\" onClick={this.openPalette}>\r\n                <div className=\"curr-color\" style={{ backgroundColor: group.style.color }} ></div>\r\n                <span>Change group color</span>\r\n              </div>\r\n              {isPalette && <ColorPalette onChangeColor={onChangeColor} />}\r\n            </div>}\r\n        </div>\r\n      </ClickAwayListener>\r\n    )\r\n  }\r\n}\r\n","import { Component } from 'react'\r\n\r\nexport class ProgressBar extends Component {\r\n\r\n  getWidth = () => {\r\n    const { length } = this.props\r\n    const width = ((1 / length) * 100).toString()\r\n    return width\r\n  }\r\n\r\n\r\n  render() {\r\n    const { bgColor, length } = this.props\r\n    return (\r\n      <div style={{ width: `${this.getWidth()}%` }}>\r\n        <div className=\"progress-bar-unit\" style={{ backgroundColor: bgColor, }}>.</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { Component } from 'react'\r\nimport { removeGroupFromBoard, addTaskToGroup, updateGroup, updateTask } from '../../store/actions/boardActions'\r\nimport { TaskPreview } from './TaskPreview'\r\nimport { EditableElement } from './EditableElement'\r\nimport { GroupDropDownActions } from './GroupDropDownActions'\r\nimport { ClickAwayListener } from '@material-ui/core'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd'\r\nimport { ProgressBar } from './ProgressBar'\r\n\r\nclass _GroupPreview extends Component {\r\n\r\n  state = {\r\n    taskTitle: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  onAddTask = (ev, newValue, type) => {\r\n    ev.preventDefault()\r\n    if (!newValue) return\r\n    const { updateTask, board, group, addTaskToGroup, loggedInUser, taskId } = this.props\r\n    updateTask({ board, groupId: group.id, userId: loggedInUser._id, taskId, newValue, type })\r\n    this.setState({ taskTitle: '' })\r\n  }\r\n\r\n  onUpdateGroup = (newValue, type) => {\r\n    if (!newValue) return\r\n    const { updateGroup, board, group, loggedInUser } = this.props\r\n    updateGroup({ board, groupId: group.id, userId: loggedInUser._id, newValue, type })\r\n  }\r\n\r\n  onRemoveGroup = (groupId) => {\r\n    const { board } = this.props\r\n    const loggedInUserId = this.props.loggedInUser._id\r\n    this.props.removeGroupFromBoard(board, loggedInUserId, groupId)\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value } = target\r\n    this.setState({ taskTitle: value })\r\n  }\r\n\r\n  sortedTasksColors = (colorType) => {\r\n    const { group } = this.props\r\n    const tasksColors = group.tasks.map(task => task[colorType].color)\r\n    const colors = tasksColors.sort()\r\n    return colors\r\n  }\r\n\r\n  render() {\r\n    const { group, board, idx, users } = this.props\r\n    const { taskTitle, isActionsModal } = this.state\r\n    const statusColors = this.sortedTasksColors('status')\r\n    const priorityColors = this.sortedTasksColors('priority')\r\n    return (\r\n      <Draggable draggableId={group.id} index={idx} isCombineEnabled>\r\n        {(provided) => (\r\n          <section className=\"group-box-preview\"\r\n            {...provided.draggableProps}\r\n            ref={provided.innerRef}>\r\n            <div className=\"group-headers flex\">\r\n              <GroupDropDownActions provided={provided} group={group}\r\n                onRemoveGroup={this.onRemoveGroup} onChangeColor={this.onUpdateGroup} />\r\n              <div className=\"group-header flex align-center\" >\r\n                <h4 style={{ color: `${group.style.color}` }} className=\"group-title\">\r\n                  <EditableElement\r\n                    onChangeTitle={this.onUpdateGroup}\r\n                    title={group.title}\r\n                    color={group.style.color}\r\n                    type=\"title\" />\r\n                </h4>\r\n                <span></span>\r\n                <h4>Members</h4>\r\n                <h4>Status</h4>\r\n                <h4>Date Range</h4>\r\n                <h4>Priority</h4>\r\n              </div>\r\n            </div>\r\n            <Droppable droppableId={group.id} isCombineEnabled type=\"task\">\r\n              {(provided) => (\r\n                <div className=\"group-tasks flex column group-droppable-container\"\r\n                  {...provided.dragHandleProps}\r\n                  {...provided.draggableProps}\r\n                  ref={provided.innerRef}>\r\n                  {group.tasks.map((task, index) =>\r\n                    <TaskPreview task={task}\r\n                      board={board}\r\n                      group={group}\r\n                      key={task.id}\r\n                      users={users}\r\n                      idx={index}\r\n                      userPrefColor={group.style.color}\r\n                    />\r\n                  )}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className=\"group-bottom-section-input\">\r\n              <div style={{ backgroundColor: `${group.style.color}66` }}></div>\r\n              <ClickAwayListener onClickAway={(ev) => this.onAddTask(ev, taskTitle, 'title')}>\r\n                <form onSubmit={(ev) => this.onAddTask(ev, taskTitle, 'title')}>\r\n                  <input type=\"text\" placeholder=\"+ Add\" value={taskTitle} onChange={this.handleChange} />\r\n                </form>\r\n              </ClickAwayListener>\r\n              <div style={{ backgroundColor: '#c4c4c4' }}></div>\r\n            </div>\r\n            <div className=\"progress-bar-section\" >\r\n              <div className=\"progress-bar-status flex \">\r\n                {statusColors.map((color, idx) =>\r\n                  <ProgressBar key={idx} bgColor={color} length={statusColors.length} />\r\n                )}\r\n              </div>\r\n              <div className=\"progress-bar-priority flex \">\r\n                {priorityColors.map((color, idx) =>\r\n                  <ProgressBar key={idx} bgColor={color} length={priorityColors.length} />\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n          </section >\r\n        )\r\n        }\r\n      </Draggable>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  removeGroupFromBoard,\r\n  // addTaskToGroup,\r\n  updateGroup,\r\n  updateTask\r\n}\r\n\r\nexport const GroupPreview = connect(mapStateToProps, mapDispatchToProps)(_GroupPreview)","import { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { BoardHeader } from './BoardHeader'\r\nimport { GroupPreview } from './GroupPreview'\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd'\r\nimport { loadBoard, addGroupToBoard, onUpdateBoardAfterDrag, updateBoard } from '../../store/actions/boardActions'\r\n\r\nclass _BoardPreview extends Component {\r\n\r\n  componentDidMount() {\r\n  }\r\n\r\n  onAddGroup = () => {\r\n    const { board, loggedInUser, addGroupToBoard } = this.props\r\n    addGroupToBoard(board, loggedInUser._id)\r\n  }\r\n\r\n  onChangeBoardTitle = (title) => {\r\n    const { board, loggedInUser, updateBoard } = this.props\r\n    updateBoard({ board, userId: loggedInUser._id, newValue: title, type: 'title' })\r\n  }\r\n\r\n  onUpdateBoardMembers = (memberId, action) => {\r\n    const { board, loggedInUser, updateBoard } = this.props\r\n    const { members } = board\r\n    let newValue\r\n    if (action === 'remove') {\r\n      newValue = members.filter(id => id !== memberId)\r\n    }\r\n    else {\r\n      members.push(memberId)\r\n      newValue = members\r\n    }\r\n    updateBoard({ board, userId: loggedInUser._id, newValue, type: 'members' })\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { destination, source, droppableId, type, draggableId } = result\r\n    const { board } = this.props\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n    const boardToUpdate = JSON.parse(JSON.stringify(board))\r\n    if (type === 'group') {\r\n      const [draggbleGroup] = boardToUpdate.groups.splice(source.index, 1)\r\n      boardToUpdate.groups.splice(destination.index, 0, draggbleGroup)\r\n    }\r\n    else {\r\n      if (source.droppableId === destination.droppableId) {\r\n        const droppableGroupIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const droppableGroup = boardToUpdate.groups[droppableGroupIdx]\r\n        // const draggbleTask = droppableGroup.tasks.find(task => task.id === draggableId)\r\n        const [draggbleTask] = droppableGroup.tasks.splice(source.index, 1)\r\n        droppableGroup.tasks.splice(destination.index, 0, draggbleTask)\r\n        boardToUpdate.groups.splice(droppableGroupIdx, 1, droppableGroup)\r\n      } else {\r\n        const sourceGroupIdx = boardToUpdate.groups.findIndex(group => group.id === source.droppableId)\r\n        const destinationGroupIdx = boardToUpdate.groups.findIndex(group => group.id === destination.droppableId)\r\n        const sourceGroup = boardToUpdate.groups[sourceGroupIdx]\r\n        const destinationGroup = boardToUpdate.groups[destinationGroupIdx]\r\n        const [draggbleTask] = sourceGroup.tasks.splice(source.index, 1)\r\n        destinationGroup.tasks.splice(destination.index, 0, draggbleTask)\r\n        boardToUpdate.groups.splice(sourceGroupIdx, 1, sourceGroup)\r\n        boardToUpdate.groups.splice(destinationGroupIdx, 1, destinationGroup)\r\n      }\r\n    }\r\n    this.props.onUpdateBoardAfterDrag(boardToUpdate)\r\n  }\r\n\r\n  render() {\r\n    const { board, users } = this.props\r\n    if (!board) return <div>Loading...</div>\r\n    return (\r\n      <div className=\"board-preview flex column\">\r\n        <BoardHeader\r\n          board={board}\r\n          users={users}\r\n          onAddGroup={this.onAddGroup}\r\n          onChangeBoardTitle={this.onChangeBoardTitle}\r\n          onUpdateBoardMembers={this.onUpdateBoardMembers}\r\n        />\r\n        <DragDropContext onDragEnd={this.onDragEnd}>\r\n          <Droppable droppableId={board._id} isCombineEnabled type=\"group\">\r\n            {(provided) => (\r\n              <div className=\"groups-container flex column\"\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}>\r\n                {board.groups.map((group, idx) =>\r\n                  <GroupPreview\r\n                    group={group}\r\n                    board={board}\r\n                    key={group.id}\r\n                    idx={idx}\r\n                    users={users} />\r\n                )}\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        </DragDropContext>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    board: state.boardModule.board,\r\n    loggedInUser: state.userModule.loggedInUser,\r\n    users: state.userModule.users\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  addGroupToBoard,\r\n  loadBoard,\r\n  updateBoard,\r\n  onUpdateBoardAfterDrag,\r\n}\r\n\r\nexport const BoardPreview = connect(mapStateToProps, mapDispatchToProps)(_BoardPreview)","import React from 'react'\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\nexport class BoardFilter extends React.Component {\r\n\r\n  state = {\r\n    filterBy: {\r\n      name: '',\r\n    }\r\n  }\r\n\r\n  inputRef = React.createRef()\r\n\r\n  componentDidMount() {\r\n    this.inputRef.current.focus()\r\n  }\r\n\r\n  handleChange = (ev) => {\r\n    const field = ev.target.name\r\n    const value = ev.target.type === 'number' ? +ev.target.value : ev.target.value\r\n    this.setState(({ filterBy }) => ({ filterBy: { ...filterBy, [field]: value } }), () => { this.props.onBoardFilter(this.state.filterBy) })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"board-filter-section flex column align-center\" >\r\n        <form className=\"flex column align-center\">\r\n          <div>\r\n            <input className=\"inputTypeSearch\"\r\n              type=\"search\"\r\n              name=\"name\"\r\n              autoComplete=\"off\"\r\n              placeholder=\"Search by board\"\r\n              ref={this.inputRef}\r\n              onChange={(ev) => { this.handleChange(ev) }} />\r\n          </div>\r\n          {/* <SearchIcon />\r\n          <InputBase className=\"inputTypeSearch\" type=\"search\" name=\"name\" placeholder=\"Search by board\" ref={this.inputRef}\r\n            onChange={(ev) => { this.handleChange(ev) }} inputProps={{ 'aria-label': 'search' }} /> */}\r\n        </form>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { BoardFilter } from './BoardFilter'\r\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { Input } from '@material-ui/core';\r\nimport { ClickAwayListener } from '@material-ui/core';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\nimport ViewListIcon from '@material-ui/icons/ViewList';\r\n\r\nexport class SideNav extends React.Component {\r\n\r\n  state = {\r\n    isAddTxt: false,\r\n    boardTitle: '',\r\n    isNavShown: true\r\n  }\r\n\r\n  onToggleAddInput = () => {\r\n    this.setState({ isAddTxt: !this.state.isAddTxt })\r\n  }\r\n\r\n  addBoard = (ev) => {\r\n    ev.preventDefault()\r\n    const { boardTitle } = this.state\r\n    if (boardTitle) {\r\n      this.props.onAddBoard(boardTitle)\r\n    }\r\n    this.setState({ isAddTxt: !this.state.isAddTxt, boardTitle: '' })\r\n  }\r\n\r\n  handleChange = ({ target }) => {\r\n    const { value } = target\r\n    this.setState({ boardTitle: value })\r\n  }\r\n\r\n  onToggleBar = () => {\r\n    this.setState({ isNavShown: !this.state.isNavShown })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    const { boards, boardId, onRemoveBoard, onBoardFilter } = this.props\r\n    const { isAddTxt, isNavShown } = this.state\r\n\r\n    return (\r\n      <nav className={`main-sidenav flex column ${(isNavShown) ? \"\" : \"hide\"}`}>\r\n        <div className={`content-container ${isNavShown ? \"\" : \"opacity-hide\"}`}>\r\n          <div className=\"my-workspace flex\">\r\n            <div className=\"flex\">M</div>\r\n            <HomeIcon className=\"home-icon\" />\r\n            <h1>My Workspace</h1>\r\n          </div>\r\n\r\n          <BoardFilter onBoardFilter={onBoardFilter} />\r\n\r\n          {(!isAddTxt) ?\r\n            <div className=\"add-board-btn flex align-center\" onClick={this.addBoard}>\r\n              <AddCircleOutlineIcon style={{ color: '7a7a82' }} />\r\n              <span>Add board</span>\r\n            </div> :\r\n            <form className=\"add-board-form\" style={{ paddingLeft: '9px' }} onSubmit={this.addBoard}>\r\n              <ClickAwayListener onClickAway={this.onToggleAddInput}>\r\n                <Input style={{ fontSize: '12px' }} className=\"add-board-input\" type=\"text\"\r\n                  name=\"board-title\"\r\n                  autoComplete=\"off\"\r\n                  autoFocus={true}\r\n                  required={true}\r\n                  placeholder=\"New Board title\"\r\n                  onChange={this.handleChange} />\r\n              </ClickAwayListener>\r\n            </form>}\r\n\r\n          <h1 className=\"my-boards-title\">My boards</h1>\r\n          <ul>\r\n            {boards.map(board =>\r\n              <li className=\"nav-a\" key={board._id}>\r\n                <div className={`board-link-container flex align-center  ${board._id === boardId ? 'active' : ''}`}>\r\n                  <ViewListIcon style={{ color: '#7a7a82' }} />\r\n                  <Link to={`/board/${board._id}`} className=\"clean-link sidebar-link\">{board.title}</Link>\r\n                  {(boards.length !== 1) && < DeleteIcon className=\"delete-icon\" onClick={() => onRemoveBoard(board._id)} />}\r\n                </div>\r\n              </li>)}\r\n          </ul>\r\n        </div>\r\n\r\n        <button className=\"toggle-nav-btn\" onClick={this.onToggleBar}>\r\n          {isNavShown && <ArrowBackIosIcon className=\"toggle-nav-close-icon\" />\r\n            || <ArrowForwardIosIcon className=\"toggle-nav-open-icon\" />}\r\n          {/* <SettingsEthernetIcon className=\"toggle-nav-icon\" /> */}\r\n        </button>\r\n      </nav >\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { SideHeader } from '../cmps/SideHeader'\r\nimport { BoardPreview } from '../cmps/BoardPreview'\r\nimport { SideNav } from '../cmps/SideNav'\r\nimport { loadUsers, logout } from '../../store/actions/userActions'\r\nimport {\r\n  loadBoard, addBoard,\r\n  removeBoard, loadBoards,\r\n  updateBoardAfterSocket\r\n} from '../../store/actions/boardActions'\r\nimport { socketService } from '../../services/socketService'\r\nimport { Route } from 'react-router'\r\nimport { Chat } from '../cmps/Chat'\r\n\r\nclass _BoardApp extends React.Component {\r\n\r\n  async componentDidMount() {\r\n    const { loggedInUser, boards } = this.props\r\n    const { id } = this.props.match.params\r\n    if (!loggedInUser) {\r\n      this.props.history.push('/')\r\n      return\r\n    }\r\n    await socketService.setup()\r\n    socketService.emit('board room', id)\r\n    socketService.on('update board', this.props.updateBoardAfterSocket)\r\n    if (!boards.length) {\r\n      await this.props.loadBoards(loggedInUser._id) // this is a problem\r\n      // this.onAddBoard('Start here')\r\n    }\r\n    if (id) {\r\n      this.props.loadUsers()\r\n      this.loadBoard()\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    socketService.terminate()\r\n    socketService.off('update board', this.props.updateBoardAfterSocket)\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.match.params.id !== this.props.match.params.id) {\r\n      socketService.emit('board room', this.props.match.params.id)\r\n      this.loadBoard(this.props.match.params.id)\r\n    }\r\n  }\r\n\r\n  onBoardFilter = (filterBy) => {\r\n    this.props.loadBoards(this.props.loggedInUser._id, filterBy)\r\n  }\r\n\r\n  loadBoard = () => {\r\n    const { id } = this.props.match.params\r\n    this.props.loadBoard(id)\r\n  }\r\n\r\n  onAddBoard = (title) => {\r\n    const { loggedInUser, addBoard } = this.props\r\n    addBoard(title, loggedInUser._id)\r\n  }\r\n\r\n  onRemoveBoard = (BoardId) => {\r\n    const { removeBoard, boards } = this.props\r\n    if (boards.length === 1) return\r\n    removeBoard(BoardId)\r\n    // const path = boards?.length ? `/board/${boards[0]._id}` : `/board`\r\n    // this.props.history.push(path)\r\n  }\r\n\r\n  render() {\r\n    const { board, boards, loggedInUser, match, logout } = this.props\r\n    if (!board) return <div className=\"loading\"></div>\r\n    return (\r\n      <section className=\"board-app-container flex\">\r\n        <SideHeader user={loggedInUser} logout={logout} />\r\n        {/* <div className=\"flex app-main-container\"> */}\r\n          <SideNav boards={boards}\r\n            boardId={board._id}\r\n            onBoardFilter={this.onBoardFilter}\r\n            onRemoveBoard={this.onRemoveBoard}\r\n            onAddBoard={this.onAddBoard} />\r\n          <BoardPreview />\r\n        {/* </div> */}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    boards: state.boardModule.boards,\r\n    board: state.boardModule.board,\r\n    loggedInUser: state.userModule.loggedInUser\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  addBoard,\r\n  removeBoard,\r\n  loadBoards,\r\n  loadUsers,\r\n  updateBoardAfterSocket,\r\n  logout\r\n}\r\n\r\nexport const BoardApp = connect(mapStateToProps, mapDispatchToProps)(_BoardApp)","import { Home } from './main-pages/Home.jsx'\r\nimport { Login } from './main-pages/Login.jsx'\r\nimport { Signup } from './main-pages/Signup.jsx'\r\nimport { BoardApp } from './Board/pages/BoardApp'\r\nimport { MemberProfile } from './main-pages/MemberProfile.jsx'\r\nimport { Chat } from './Board/cmps/Chat.jsx'\r\n\r\nexport const routes = [\r\n    {\r\n        path: '/',\r\n        component: Home,\r\n    },\r\n    {\r\n        path: '/login/',\r\n        component: Login,\r\n    },\r\n    {\r\n        path: '/signup/',\r\n        component: Signup,\r\n    },\r\n    {\r\n        path: '/user/:id',\r\n        component: MemberProfile,\r\n    },\r\n    {\r\n        path: '/board/:id?',\r\n        component: BoardApp\r\n    }\r\n]","import React, { Component } from 'react'\r\n\r\nimport {userService} from '../services/userService'\r\n\r\nexport class MemberProfile extends Component {\r\n  state = {\r\n    user : null\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    const user = await userService.getById(this.props.match.params.id)\r\n    this.setState({user})\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className=\"member-details\">\r\n        <h1>User Details</h1>\r\n        {this.state.user && <div>\r\n          <h3>\r\n            {this.state.user.fullname}\r\n          </h3>\r\n          <pre>\r\n            {JSON.stringify(this.state.user, null, 2)}\r\n          </pre>\r\n        </div>}\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\n","import { routes } from './routes.js'\nimport { HashRouter as Router, Route } from 'react-router-dom'\n\n\nexport function App() {\n  return (\n    <Router>\n      {\n        routes.map(route => <Route key={route.path} exact component={route.component}\n          path={route.path} />)\n      }\n    </Router>\n  );\n}\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport function systemReducer (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true }\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false }\r\n    default: return state\r\n  }\r\n}\r\n\r\n","const initialState = {\r\n  boards: [],\r\n  err: null,\r\n  board: null\r\n}\r\n\r\nexport function boardReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards }\r\n    case 'SET_CURR_BOARD':\r\n      return { ...state, board: action.board }\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.savedBoard] }\r\n    case 'UPDATE_BOARD':\r\n      return {\r\n        ...state, board: action.board,\r\n        boards: state.boards.map(board => board._id === action.board._id ? action.board : board)\r\n      }\r\n    case 'REMOVE_BOARD':\r\n      return { ...state, boards: state.boards.filter(board => board._id !== action.boardId) }\r\n    case 'BOARD_ERR':\r\n      return { ...state, err: action.err }\r\n    default:\r\n      return state\r\n  }\r\n}","import { userService } from \"../../services/userService\"\r\n\r\nconst initialState = {\r\n  loggedInUser: userService.getLoggedinUser(),\r\n  users: []\r\n}\r\n\r\nexport function userReducer(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user }\r\n    case 'REMOVE_USER':\r\n      return { ...state, users: state.users.filter(user => user._id !== action.userId) }\r\n    case 'SET_USERS':\r\n      return { ...state, users: action.users }\r\n    case 'SET_SCORE':\r\n      return { ...state, loggedInUser: { ...state.loggedInUser, score: action.score } }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux'\r\n\r\nimport thunk from 'redux-thunk'\r\nimport { systemReducer } from './reducers/systemReducer.js'\r\nimport { boardReducer } from './reducers/boardReducer.js'\r\nimport { userReducer } from './reducers/userReducer.js'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nexport const rootReducer = combineReducers({\r\n    systemModule: systemReducer,\r\n    userModule: userReducer,\r\n    boardModule: boardReducer,\r\n})\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { App } from './App.jsx';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport './assets/scss/style.scss';\nimport { store } from \"./store/store.js\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}